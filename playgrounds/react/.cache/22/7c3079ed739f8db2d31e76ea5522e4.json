{"id":"../../../node_modules/@ds.e/react/lib/molecules/Select/Select.js","dependencies":[{"name":"F:\\Document_Code\\design-system\\ds.e\\node_modules\\@ds.e\\react\\lib\\molecules\\Select\\Select.js.map","includedInParent":true,"mtime":1660835560140},{"name":"F:\\Document_Code\\design-system\\ds.e\\playgrounds\\react\\package.json","includedInParent":true,"mtime":1660553858105},{"name":"F:\\Document_Code\\design-system\\ds.e\\node_modules\\@ds.e\\react\\package.json","includedInParent":true,"mtime":1660574621969},{"name":"react","loc":{"line":1,"column":62,"index":62},"parent":"F:\\Document_Code\\design-system\\ds.e\\node_modules\\@ds.e\\react\\lib\\molecules\\Select\\Select.js","resolved":"F:\\Document_Code\\design-system\\ds.e\\node_modules\\react\\index.js"},{"name":"../../atoms/Text/Text.js","loc":{"line":2,"column":17,"index":88},"parent":"F:\\Document_Code\\design-system\\ds.e\\node_modules\\@ds.e\\react\\lib\\molecules\\Select\\Select.js","resolved":"F:\\Document_Code\\design-system\\ds.e\\node_modules\\@ds.e\\react\\lib\\atoms\\Text\\Text.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = exports.KEY_CODES = void 0;\n\nvar _react = _interopRequireWildcard(require(\"react\"));\n\nvar _Text = _interopRequireDefault(require(\"../../atoms/Text/Text.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function (nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\n\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\n\nconst KEY_CODES = {\n  ENTER: 13,\n  SPACE: 32,\n  DOWN_ARROW: 40,\n  ESC: 27,\n  UP_ARROW: 38\n};\nexports.KEY_CODES = KEY_CODES;\n\nconst getPreviousOptionIndex = (currentIndex, options) => {\n  if (currentIndex === null) {\n    return 0;\n  }\n\n  if (currentIndex === 0) {\n    return options.length - 1;\n  }\n\n  return currentIndex - 1;\n};\n\nconst getNextOptionIndex = (currentIndex, options) => {\n  if (currentIndex === null) {\n    return 0;\n  }\n\n  if (currentIndex === options.length - 1) {\n    return 0;\n  }\n\n  return currentIndex + 1;\n};\n\nconst Select = ({\n  options = [],\n  label = 'Please select an option ...',\n  onOptionSelected: handler,\n  renderOption\n}) => {\n  const [isOpen, setIsOpen] = (0, _react.useState)(false);\n  const [selectedIndex, setSelectedIndex] = (0, _react.useState)(null);\n  const [highlightedIndex, setHighlightedIndex] = (0, _react.useState)(null);\n  const labelRef = (0, _react.useRef)(null);\n  const [optionRefs, setOptionRefs] = (0, _react.useState)([]);\n  const [overlayTop, setOverlayTop] = (0, _react.useState)(0);\n\n  const onOptionSelected = (option, optionIndex) => {\n    if (handler) {\n      handler(option, optionIndex);\n    }\n\n    setSelectedIndex(optionIndex);\n    setIsOpen(false);\n  };\n\n  const onLabelClick = () => {\n    setIsOpen(!isOpen);\n  };\n\n  (0, _react.useEffect)(() => {\n    setOverlayTop((labelRef.current?.offsetHeight || 0) + 10);\n  }, [labelRef.current?.offsetHeight]);\n  let selectedOption = null;\n\n  if (selectedIndex !== null) {\n    selectedOption = options[selectedIndex];\n  }\n\n  const highlightOption = optionIndex => {\n    setHighlightedIndex(optionIndex);\n  };\n\n  const onButtonKeyDown = event => {\n    event.preventDefault();\n\n    if ([KEY_CODES.ENTER, KEY_CODES.SPACE, KEY_CODES.DOWN_ARROW].includes(event.keyCode)) {\n      setIsOpen(true); // set focus on the list item\n\n      highlightOption(0);\n    }\n  };\n\n  (0, _react.useEffect)(() => {\n    setOptionRefs(options.map(_ => (0, _react.createRef)()));\n  }, [options.length]);\n  (0, _react.useEffect)(() => {\n    if (highlightedIndex !== null && isOpen) {\n      const ref = optionRefs[highlightedIndex];\n\n      if (ref && ref.current) {\n        ref.current.focus();\n      }\n    }\n  }, [isOpen, highlightedIndex]);\n\n  const onOptionKeyDown = event => {\n    if (event.keyCode === KEY_CODES.ESC) {\n      setIsOpen(false);\n      return;\n    }\n\n    if (event.keyCode === KEY_CODES.DOWN_ARROW) {\n      highlightOption(getNextOptionIndex(highlightedIndex, options));\n    }\n\n    if (event.keyCode === KEY_CODES.UP_ARROW) {\n      highlightOption(getPreviousOptionIndex(highlightedIndex, options));\n    }\n\n    if (event.keyCode === KEY_CODES.ENTER) {\n      onOptionSelected(options[highlightedIndex], highlightedIndex);\n    }\n  };\n\n  return _react.default.createElement(\"div\", {\n    className: 'dse-select'\n  }, _react.default.createElement(\"button\", {\n    \"data-testid\": 'DseSelectButton',\n    onKeyDown: onButtonKeyDown,\n    \"aria-controls\": 'dse-select-list',\n    \"aria-haspopup\": true,\n    \"aria-expanded\": isOpen ? true : undefined,\n    ref: labelRef,\n    className: 'dse-select__label',\n    onClick: () => onLabelClick()\n  }, _react.default.createElement(_Text.default, null, selectedOption === null ? label : selectedOption.label), _react.default.createElement(\"svg\", {\n    className: `dse-select__caret ${isOpen ? 'dse-select__caret--open' : 'dse-select__caret--closed'}`,\n    width: '1rem',\n    height: '1rem',\n    fill: \"none\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    strokeWidth: 2,\n    viewBox: \"0 0 24 24\",\n    stroke: \"currentColor\"\n  }, _react.default.createElement(\"path\", {\n    d: \"M19 9l-7 7-7-7\"\n  }))), isOpen && _react.default.createElement(\"ul\", {\n    role: 'menu',\n    \"aria-hidden\": isOpen ? undefined : false,\n    id: 'dse-select-list',\n    style: {\n      top: overlayTop\n    },\n    className: `dse-select__overlay ${isOpen ? 'dse-select__overlay--open' : ''}`\n  }, options.map((option, optionIndex) => {\n    const isSelected = selectedIndex === optionIndex;\n    const isHighlighted = highlightedIndex === optionIndex;\n    const ref = optionRefs[optionIndex];\n    const renderOptionProps = {\n      ref,\n      option,\n      isSelected,\n      getOptionRecommendedProps: (overrideProps = {}) => {\n        return {\n          ref,\n          role: 'menuitemradio',\n          'aria-label': option.label,\n          'aria-checked': isSelected ? true : undefined,\n          onKeyDown: onOptionKeyDown,\n          tabIndex: isHighlighted ? -1 : 0,\n          onMouseEnter: () => highlightOption(optionIndex),\n          onMouseLeave: () => highlightOption(null),\n          className: `dse-select__option\n                                ${isSelected ? 'dse-select__option--selected' : ''}\n                                ${isHighlighted ? 'dse-select__option--highlighted' : ''}\n                            `,\n          key: option.value,\n          onClick: () => onOptionSelected(option, optionIndex),\n          ...overrideProps\n        };\n      }\n    };\n\n    if (renderOption) {\n      return renderOption(renderOptionProps);\n    }\n\n    return _react.default.createElement(\"li\", { ...renderOptionProps.getOptionRecommendedProps()\n    }, _react.default.createElement(_Text.default, null, option.label), isSelected ? _react.default.createElement(\"svg\", {\n      width: '1rem',\n      height: '1rem',\n      fill: \"none\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\",\n      strokeWidth: 2,\n      viewBox: \"0 0 24 24\",\n      stroke: \"currentColor\"\n    }, _react.default.createElement(\"path\", {\n      d: \"M5 13l4 4L19 7\"\n    })) : null);\n  })));\n};\n\nexports.default = Select;"},"sourceMaps":{"js":{"mappings":[],"sources":{},"lineCount":null}},"error":null,"hash":"dcd4a0ac884c359f6155eca64d55a4c7","cacheData":{"env":{}}}